help(lm)
#---------------------------------------
# disconnect and unload driver when done
dbDisconnect(con)
dbUnloadDriver(drv)
library("RPostgreSQL")
#---------------------------------------
# disconnect and unload driver when done
dbDisconnect(con)
dbUnloadDriver(drv)
setwd("~/anaconda3/envs/notebook/analysis/ignore/children_hospitals")
library(tidyverse)
df <- read.csv("data.csv", header=T, na.strings=c("-","NA"))
summary(df)
# save summary stats in a dataframe so we can refer to them later
dfsum <- data.frame(unclass(summary(df)), check.names = FALSE, stringsAsFactors = FALSE)
write_csv(dfsum,'data_summary.csv')
View(dfsum)
qplot(totalNPR,
data=df,
fill=factor(fy),
bins = 12
)
View(df)
qplot(totalNPR,
data=df,
fill=factor(fy),
bins = 30
)
qplot(margin,
data=df,
fill=factor(fy),
bins = 30
)
qplot(net_income,
data=df,
fill=factor(fy),
bins = 30
)
qplot(compensation_perc,
data=df,
fill=factor(fy),
bins = 30
)
setwd("~/anaconda3/envs/notebook/analysis/ignore/children_hospitals")
library(tidyverse)
options("scipen" = 10)
df <- read.csv("data.csv", header=T, na.strings=c("-","NA"))
summary(df)
# save summary stats in a dataframe so we can refer to them later
dfsum <- data.frame(unclass(summary(df)), check.names = FALSE, stringsAsFactors = FALSE)
write_csv(dfsum,'data_summary.csv')
qplot(totalNPR,
data=df,
fill=factor(fy),
bins = 30
)
qplot(margin,
data=df,
fill=factor(fy),
bins = 30
)
qplot(net_income,
data=df,
fill=factor(fy),
bins = 30
)
qplot(compensation_perc,
data=df,
fill=factor(fy),
bins = 30
)
years <- table(df$fy)
years
df5 <- filter(df$fy != c("2011","2018"))
years5 <- table(df$fy)
years5
years5 <- table(df5$fy)
df5 <- filter(df$fy %in% c("2012","2013","2014","2015","2016","2017"))
years5 <- table(df5$fy)
df5 <- filter(!df$fy %in% c("2011","2018"))
df5 <- filter(!df, fy %in% c("2011","2018"))
df5 <- filter(!df, fy %in% c(2011,2018))
df5 <- filter(df, !fy %in% c(2011,2018))
years5 <- table(df5$fy)
years5
qplot(totalNPR,
data=df5,
fill=factor(fy),
bins = 30
)
qplot(margin,
data=df5,
fill=factor(fy),
bins = 30
)
qplot(net_income,
data=df5,
fill=factor(fy),
bins = 30
)
qplot(compensation_perc,
data=df5,
fill=factor(fy),
bins = 30
)
View(df5)
setwd("~/anaconda3/envs/notebook/crainshack/data/hospitals")
setwd("~/anaconda3/envs/notebook/crainshack/data/rsocrata")
library(tidyverse)
library(RSocrata)
install.packages(RSocrata)
install.packages(rsocrata)
install.packages("RSocrata")
library(RSocrata)
# Basic functions in R ----------------------------------------------------
1 + 1
2 * 3
data("mtcars")
View(mtcars)
class(mtcars)
class(1)
class(TRUE)
class("TRUE")
summary(mtcars)
head(mtcars)
str(mtcars)
# Work with Chicago Data Portal public salary information -----------------
# Read some data in
salaries <- read_csv("https://data.cityofchicago.org/resource/tt4n-kn4t.csv")
# For some reason, this only reads in 1000 rows: likely something to do with the API
salaries_all <- read.socrata("https://data.cityofchicago.org/resource/tt4n-kn4t.csv")
salaries_all <- as_tibble(salaries_all)
class(salaries_all)
head(salaries_all)
View(salaries_all)
names(salaries_all)
# Filter by non-hourly employees only
ft_salaries <- filter(salaries_all, salary_or_hourly == "Salary")
# Who are the top earners?
select(ft_salaries, annual_salary, department, name) %>%
arrange(desc(annual_salary))
# Who's the top paid in each department?
top_paid <- select(ft_salaries, annual_salary, department, name) %>%
group_by(department) %>%
arrange(desc(annual_salary)) %>%
slice(1)
View(top_paid)
# What's the median salary for each department?
median_paid <- select(ft_salaries, annual_salary, department, name) %>%
group_by(department) %>%
summarize(med_salary = median(annual_salary))
# Challenge! Sort median_paid from highest to lowest salary
arrange(median_paid, desc(med_salary))
view(median_paid)
View(median_paid)
# Make a plot of the distribution of median salary
ggplot(median_paid, aes(x = med_salary)) +
geom_histogram(fill = "blue") +
labs(x = "Median Salary",
title = "Distribution of Median Salaries")
